{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#netbox-network-canvas-plugin","title":"NetBox Network Canvas Plugin","text":"<p>Interactive network topology visualization for NetBox DCIM/IPAM data with comprehensive Layer 2/Layer 3 mapping, VLAN visualization, and real-time network discovery.</p> <p></p>"},{"location":"#features","title":"Features","text":""},{"location":"#-core-visualization","title":"\ud83c\udfaf Core Visualization","text":"<ul> <li>Interactive Network Diagrams: Drag-and-drop network topology with D3.js-powered visualization</li> <li>Multi-Layer Support: Simultaneous Layer 2 (switching) and Layer 3 (routing) topology display</li> <li>Real-Time Updates: Live topology refresh with configurable intervals</li> <li>Responsive Design: Scales from mobile to large displays with zoom and pan capabilities</li> <li>Professional Dashboard: Modern interface with network statistics and canvas management</li> </ul>"},{"location":"#-netbox-integration","title":"\ud83d\udd0c NetBox Integration","text":"<ul> <li>Native NetBox Data: Leverages existing DCIM devices, cables, interfaces, and IPAM data</li> <li>Site-Specific Views: Filter topology by NetBox sites for focused visualization</li> <li>Device Role Mapping: Automatic styling based on device roles (switches, routers, servers, firewalls)</li> <li>Cable Tracking: Physical and logical connection visualization with cable metadata</li> <li>Real-Time Data API: RESTful endpoints for topology data access</li> </ul>"},{"location":"#-network-intelligence","title":"\ud83c\udf10 Network Intelligence","text":"<ul> <li>Device Auto-Detection: Automatically categorizes devices by type with appropriate icons</li> <li>Enhanced Tooltips: Rich device information including manufacturer, interfaces, IP addresses</li> <li>Connection Visualization: Real cable connections with fallback topology generation</li> <li>Interactive Controls: Zoom fit, label toggle, refresh, and drag-to-position functionality</li> <li>Performance Optimized: Efficient database queries with caching support</li> </ul>"},{"location":"#-advanced-features","title":"\ud83d\udcca Advanced Features","text":"<ul> <li>Canvas Management: Create, edit, and organize multiple topology views with descriptions</li> <li>Search &amp; Filtering: Comprehensive filtering by name, description, and other attributes</li> <li>Professional Styling: Modern CSS with hover effects, animations, and responsive design</li> <li>Error Handling: Graceful fallbacks and user-friendly error messages</li> <li>Mobile Support: Responsive design with mobile-optimized controls</li> </ul>"},{"location":"#-management-interface","title":"\ud83c\udf9b\ufe0f Management Interface","text":"<ul> <li>Enhanced Dashboard: Network statistics overview with device, VLAN, and connection counts</li> <li>Canvas CRUD Operations: Full create, read, update, delete functionality for canvases</li> <li>Data Population Tools: Management commands for generating demo data</li> <li>API Endpoints: RESTful API for topology data and integration</li> </ul>"},{"location":"#screenshots","title":"Screenshots","text":""},{"location":"#dashboard-view","title":"Dashboard View","text":"<ul> <li>Network statistics overview</li> <li>Quick canvas creation and management</li> <li>Recent topology canvases list</li> </ul>"},{"location":"#interactive-topology-canvas","title":"Interactive Topology Canvas","text":"<ul> <li>Zoomable/pannable network diagram</li> <li>Device details on click/hover</li> <li>Real-time topology updates</li> <li>Layer 2/3 visualization controls</li> </ul>"},{"location":"#compatibility","title":"Compatibility","text":"NetBox Version Plugin Version Status 3.5.x 0.1.0 \u2705 3.6.x 0.1.0 \u2705 3.7.x 0.1.0 \u2705 4.0.x 0.1.0 \u2705"},{"location":"#installation","title":"Installation","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>NetBox 3.5.0 or higher</li> <li>Python 3.10 or higher</li> <li>Modern web browser with JavaScript enabled</li> </ul>"},{"location":"#for-netbox-docker-setup","title":"For NetBox Docker Setup","text":"<p>See the general instructions for using netbox-docker with plugins.</p> <ol> <li>Add to your <code>plugin_requirements.txt</code>:</li> </ol> <pre><code>git+https://github.com/dashton956-alt/netbox-network-canvas-plugin\n</code></pre> <ol> <li>Enable the plugin in <code>/configuration/plugins.py</code>:</li> </ol> <pre><code>PLUGINS = [\n    'netbox_network_canvas_plugin',\n]\n\nPLUGINS_CONFIG = {\n    \"netbox_network_canvas_plugin\": {\n        # Optional configuration\n        'max_devices_per_canvas': 500,\n        'enable_real_time_updates': False,\n        'cache_topology_data': True,\n    },\n}\n</code></pre>"},{"location":"#for-standard-netbox-installation","title":"For Standard NetBox Installation","text":"<pre><code># Install from Git repository\npip install git+https://github.com/Dashton956-alt/netbox-network-canvas-plugin\n\n# Or install from local development copy\n### For Standard NetBox Installation\n\n```bash\n# Install from Git repository\npip install git+https://github.com/dashton956-alt/netbox-network-canvas-plugin\n\n# Or install from local development copy\npip install -e /path/to/netbox-network-canvas-plugin\n</code></pre> <p>Enable in NetBox configuration:</p> <pre><code># /opt/netbox/netbox/netbox/configuration.py\nPLUGINS = [\n    'netbox_network_canvas_plugin',\n]\n\nPLUGINS_CONFIG = {\n    \"netbox_network_canvas_plugin\": {\n        # Maximum devices to display per canvas (performance)\n        'max_devices_per_canvas': 500,\n\n        # Enable real-time updates (future feature)\n        'enable_real_time_updates': False,\n\n        # Cache topology data for better performance\n        'cache_topology_data': True,\n    },\n}\n</code></pre>"},{"location":"#apply-database-migrations","title":"Apply Database Migrations","text":"<pre><code># Run NetBox migrations to create plugin tables\ncd /opt/netbox\npython manage.py migrate netbox_network_canvas_plugin\n\n# Collect static files for CSS/JavaScript\npython manage.py collectstatic --no-input\n</code></pre>"},{"location":"#configuration-options","title":"Configuration Options","text":"<pre><code>PLUGINS_CONFIG = {\n    \"netbox_network_canvas_plugin\": {\n        # Maximum devices per canvas (performance limit)\n        'max_devices_per_canvas': 500,\n\n        # Enable real-time updates (future feature)\n        'enable_real_time_updates': False,\n\n        # Cache topology data for better performance\n        'cache_topology_data': True,\n    },\n}\n</code></pre>"},{"location":"#usage","title":"Usage","text":""},{"location":"#quick-start","title":"Quick Start","text":"<ol> <li>Access the Plugin: Navigate to Plugins &gt; Network Canvas in NetBox</li> <li>View Dashboard: See network statistics and topology overview</li> <li>Create Canvas: Click \"Create Canvas\" to make a new topology view</li> <li>Interactive Visualization: Use the live dashboard for real-time network topology</li> <li>Manage Canvases: View, edit, and organize your topology canvases</li> </ol>"},{"location":"#accessing-the-plugin","title":"Accessing the Plugin","text":"<p>After installation, you'll find two new menu items in NetBox:</p> <ul> <li>Network Canvas \u2192 List and manage topology canvases</li> <li>Network Dashboard \u2192 Interactive live topology visualization</li> </ul>"},{"location":"#creating-your-first-canvas","title":"Creating Your First Canvas","text":"<ol> <li>From Canvas List: Click \"Create Canvas\" </li> <li>Basic Settings:</li> <li>Name: \"Main Campus Network\"</li> <li>Description: \"Primary site topology view\"</li> <li>Save: Canvas is created and ready for use</li> </ol>"},{"location":"#using-the-live-dashboard","title":"Using the Live Dashboard","text":"<p>The dashboard provides real-time network topology visualization:</p> <ul> <li>Network Statistics: Device, VLAN, and connection counts</li> <li>Interactive Topology: D3.js-powered network diagram</li> <li>Device Information: Hover tooltips with device details</li> <li>Controls: Zoom, pan, refresh, and label toggles</li> </ul>"},{"location":"#demo-data-generation","title":"Demo Data Generation","text":"<p>If you need sample data for testing, you can use the management command that was moved to the project root:</p> <pre><code># Navigate to your NetBox installation directory\ncd /opt/netbox\n\n# Use the populate script to create demo data\npython manage.py populate_netbox_data --sites 2 --devices-per-site 10\n</code></pre>"},{"location":"#dashboard-features","title":"Dashboard Features","text":""},{"location":"#navigation-controls","title":"Navigation Controls","text":"<ul> <li>Zoom: Mouse wheel or zoom buttons</li> <li>Pan: Click and drag background</li> <li>Fit View: Click \"Fit\" to show all devices</li> <li>Toggle Labels: Show/hide device names</li> </ul>"},{"location":"#device-information","title":"Device Information","text":"<ul> <li>Device Types: Color-coded by function (switch, router, server, firewall)</li> <li>Hover Tooltips: Device details including:</li> <li>Device name and type</li> <li>Site location</li> <li>Device role</li> <li>Manufacturer information</li> <li>Interface count</li> <li>Interactive Legend: Shows device type color coding</li> </ul>"},{"location":"#real-time-data","title":"Real-Time Data","text":"<ul> <li>Live NetBox Data: Pulls current device and connection information</li> <li>Performance Optimized: Limits display to prevent browser overload</li> <li>Error Handling: Graceful fallbacks for missing or invalid data</li> </ul>"},{"location":"#api-endpoints","title":"API Endpoints","text":"<p>The plugin provides REST API endpoints for integration:</p>"},{"location":"#topology-data-api","title":"Topology Data API","text":"<p><pre><code>GET /api/plugins/network-canvas/api/topology-data/\n</code></pre> Returns current NetBox topology data in JSON format.</p> <p>Parameters: - <code>site</code> - Filter by site ID - <code>device_type</code> - Filter by device type - <code>limit</code> - Maximum devices to return (default: 100, max: 500)</p> <p>Example Response: <pre><code>{\n    \"devices\": [...],\n    \"interfaces\": [...], \n    \"connections\": [...],\n    \"metadata\": {\n        \"total_devices\": 45,\n        \"generated_at\": \"2025-08-14T10:30:00Z\"\n    }\n}\n</code></pre></p>"},{"location":"#dashboard-api","title":"Dashboard API","text":"<p><pre><code>GET /api/plugins/network-canvas/dashboard/\n</code></pre> Provides dashboard data including network statistics.</p>"},{"location":"#development","title":"Development","text":""},{"location":"#local-development-setup","title":"Local Development Setup","text":"<pre><code># Clone the repository\ngit clone https://github.com/Dashton956-alt/netbox-network-canvas-plugin\ncd netbox-network-canvas-plugin\n\n# Create virtual environment\npython -m venv venv\nsource venv/bin/activate  # Linux/Mac\n# OR\nvenv\\Scripts\\activate     # Windows\n\n# Install dependencies\npip install -r requirements_dev.txt\n\n# Install plugin in development mode\npip install -e .\n\n# Run tests\npython -m pytest\n\n# Code formatting\nblack netbox_network_canvas_plugin/\nflake8 netbox_network_canvas_plugin/\n</code></pre>"},{"location":"#plugin-architecture","title":"Plugin Architecture","text":"<pre><code>netbox_network_canvas_plugin/\n\u251c\u2500\u2500 models.py              # Django models (NetworkTopologyCanvas)\n\u251c\u2500\u2500 views.py               # Django views and API endpoints  \n\u251c\u2500\u2500 forms.py               # Django forms for canvas management\n\u251c\u2500\u2500 tables.py              # Django tables for list views\n\u251c\u2500\u2500 filtersets.py          # Filtering and search functionality\n\u251c\u2500\u2500 urls.py                # URL routing configuration\n\u251c\u2500\u2500 navigation.py          # NetBox menu integration\n\u251c\u2500\u2500 templates/             # HTML templates\n\u2502   \u2514\u2500\u2500 netbox_network_canvas_plugin/\n\u2502       \u251c\u2500\u2500 dashboard_simple.html      # Main dashboard\n\u2502       \u251c\u2500\u2500 network-canvas.html        # Canvas detail view\n\u2502       \u2514\u2500\u2500 networktopologycanvas_list.html  # Canvas list\n\u251c\u2500\u2500 static/                # CSS/JavaScript assets\n\u2502   \u2514\u2500\u2500 netbox_network_canvas_plugin/\n\u2502       \u2514\u2500\u2500 topology.css               # Professional styling\n\u251c\u2500\u2500 migrations/            # Database migrations\n\u2502   \u251c\u2500\u2500 0001_initial.py               # Initial model creation\n\u2502   \u2514\u2500\u2500 0002_update_model_structure.py # Model updates\n\u2514\u2500\u2500 __init__.py           # Plugin configuration\n</code></pre>"},{"location":"#key-components","title":"Key Components","text":"<ul> <li>Models: <code>NetworkTopologyCanvas</code> - Stores canvas configurations</li> <li>Views: Dashboard, API endpoints, CRUD operations  </li> <li>Templates: Responsive HTML with D3.js visualization</li> <li>Static Assets: Professional CSS with animations and responsive design</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions! Please see our Contributing Guide for details.</p>"},{"location":"#areas-for-contribution","title":"Areas for Contribution","text":"<ul> <li>Additional layout algorithms</li> <li>Enhanced VLAN visualization</li> <li>Performance optimizations  </li> <li>Mobile UI improvements</li> <li>Integration with network monitoring tools</li> <li>Export format extensions</li> </ul>"},{"location":"#troubleshooting","title":"Troubleshooting","text":""},{"location":"#common-issues","title":"Common Issues","text":"<p>Canvas shows \"No devices found\":  - Verify NetBox has device data configured - Check that devices have proper device types and sites - Ensure devices are in \"active\" status</p> <p>Dashboard loading slowly: - Reduce number of devices by using site filtering - Check NetBox database performance - Consider increasing cache settings</p> <p>Visualization not displaying: - Verify browser JavaScript is enabled - Check browser console for errors - Ensure modern browser (Chrome, Firefox, Safari, Edge)</p> <p>Plugin not appearing in menu: - Confirm plugin is in PLUGINS list - Run <code>python manage.py migrate</code> - Run <code>python manage.py collectstatic</code> - Restart NetBox application</p>"},{"location":"#debug-mode","title":"Debug Mode","text":"<p>Enable Django debug mode for detailed error information:</p> <pre><code># In NetBox configuration\nDEBUG = True\nLOGGING = {\n    'version': 1,\n    'handlers': {\n        'console': {\n            'class': 'logging.StreamHandler',\n        },\n    },\n    'loggers': {\n        'netbox_network_canvas_plugin': {\n            'handlers': ['console'],\n            'level': 'DEBUG',\n        },\n    },\n}\n</code></pre>"},{"location":"#roadmap","title":"Roadmap","text":""},{"location":"#version-020-planned","title":"Version 0.2.0 (Planned)","text":"<ul> <li>[ ] Enhanced Layer 3 routing visualization with routing table integration</li> <li>[ ] VLAN-aware topology with tagged/untagged port visualization</li> <li>[ ] Site-to-site connection mapping</li> <li>[ ] Advanced filtering options (by device role, status, etc.)</li> <li>[ ] Canvas export functionality (PNG, SVG, PDF)</li> </ul>"},{"location":"#version-030-future","title":"Version 0.3.0 (Future)","text":"<ul> <li>[ ] Real-time updates via WebSocket integration</li> <li>[ ] Network path tracing capabilities</li> <li>[ ] Integration with network monitoring tools (SNMP, APIs)</li> <li>[ ] Advanced layout algorithms (hierarchical, circular)</li> <li>[ ] Mobile app companion</li> </ul>"},{"location":"#long-term-goals","title":"Long-term Goals","text":"<ul> <li>[ ] Automated topology discovery via LLDP/CDP</li> <li>[ ] Historical topology comparison</li> <li>[ ] Network change visualization</li> <li>[ ] Integration with configuration management tools</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>"},{"location":"#credits","title":"Credits","text":"<p>Created by Daniel Ashton as a comprehensive NetBox plugin for network visualization.</p>"},{"location":"#built-with","title":"Built With","text":"<ul> <li>NetBox - Network documentation and DCIM platform</li> <li>Django - Python web framework  </li> <li>D3.js - Data visualization library</li> <li>Bootstrap - Frontend framework</li> </ul> <p>Based on the NetBox plugin tutorial:</p> <ul> <li>demo repository</li> <li>tutorial</li> </ul> <p>This package was created with Cookiecutter and the <code>netbox-community/cookiecutter-netbox-plugin</code> project template.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":""},{"location":"changelog/#010-2025-08-14","title":"0.1.0 (2025-08-14)","text":"<ul> <li>First release on PyPI.</li> </ul>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#contributing","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>We love your input! We want to make contributing to this project as easy and transparent as possible, whether it's:</p> <ul> <li>Reporting a bug</li> <li>Discussing the current state of the code</li> <li>Submitting a fix</li> <li>Proposing new features</li> <li>Becoming a maintainer</li> </ul>"},{"location":"contributing/#general-tips-for-working-on-github","title":"General Tips for Working on GitHub","text":"<ul> <li>Register for a free GitHub account if you haven't already.</li> <li>You can use GitHub Markdown for formatting text and adding images.</li> <li>To help mitigate notification spam, please avoid \"bumping\" issues with no activity. (To vote an issue up or down, use a  or  reaction.)</li> <li>Please avoid pinging members with <code>@</code> unless they've previously expressed interest or involvement with that particular issue.</li> <li>Familiarize yourself with this list of discussion anti-patterns and make every effort to avoid them.</li> </ul>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/dashton956-alt/netbox-network-canvas-plugin/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>NetBox Network Canvas Plugin could always use more documentation, whether as part of the official NetBox Network Canvas Plugin docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/dashton956-alt/netbox-network-canvas-plugin/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions   are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>netbox-network-canvas-plugin</code> for local development.</p> <ol> <li>Fork the <code>netbox-network-canvas-plugin</code> repo on GitHub.</li> <li> <p>Clone your fork locally</p> <pre><code>$ git clone git@github.com:your_name_here/netbox-network-canvas-plugin.git\n</code></pre> </li> <li> <p>Activate the NetBox virtual environment (see the NetBox documentation under Setting up a Development Environment):</p> <pre><code>$ source ~/.venv/netbox/bin/activate\n</code></pre> </li> <li> <p>Add the plugin to NetBox virtual environment in Develop mode (see Plugins Development):</p> <p>To ease development, it is recommended to go ahead and install the plugin at this point using setuptools' develop mode. This will create symbolic links within your Python environment to the plugin development directory. Call setup.py from the plugin's root directory with the develop argument (instead of install):</p> <pre><code>$ python setup.py develop\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put    your new functionality into a function with a docstring, and add the    feature to the list in README.md.</li> <li>The pull request should work for Python 3.8, 3.9, 3.10 and 3.11. Check    https://github.com/dashton956-alt/netbox-network-canvas-plugin/actions    and make sure that the tests pass for all supported Python versions.</li> </ol>"},{"location":"contributing/#deploying","title":"Deploying","text":"<p>A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in CHANGELOG.md) and that all tests pass. Then in the github project go to <code>Releases</code> and create a new release with a new tag.  This will automatically upload the release to pypi:</p>"}]}